<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PORTFOLIO on Belle Shen</title>
    <link>https://bellepmshen.github.io/portfolio/</link>
    <description>Recent content in PORTFOLIO on Belle Shen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Edna West</copyright>
    <lastBuildDate>Mon, 20 Mar 2023 19:47:09 +0200</lastBuildDate><atom:link href="https://bellepmshen.github.io/portfolio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Language Translator</title>
      <link>https://bellepmshen.github.io/portfolio/chatgpt_translator/</link>
      <pubDate>Mon, 20 Mar 2023 19:47:09 +0200</pubDate>
      
      <guid>https://bellepmshen.github.io/portfolio/chatgpt_translator/</guid>
      <description>Project Goal
The goal of this project was to translate a given PDF file (ex: academic paper) into the language you&amp;rsquo;d like by using ChatGPT 3.5 via API call.
Note: When this project was developed, ChatGPT 4 API call was unavailable.
Library
Here are the main libraries I used for this projects: I used pypdfium2 for extracting texts from a PDF file, NLTK for tokenizing sentences, Pandas for saving the API call log mainly, Pickle for saving the translation results, openai for API call.</description>
    </item>
    
    <item>
      <title>Facebook/Meta Stock Price Forecasting</title>
      <link>https://bellepmshen.github.io/portfolio/time_series_fb/</link>
      <pubDate>Fri, 10 Jun 2022 19:47:09 +0200</pubDate>
      
      <guid>https://bellepmshen.github.io/portfolio/time_series_fb/</guid>
      <description>Project Goal
The goal of this project was to build an ARIMA (autoregressive integrated moving average) model to forecast by using the stock open price of FB on Aug. 31, 2021 and the model was trained by using the price from Aug 1 to 30, 2021.
Library
We used Pandas for data analysis, matplotlib for visualization, NumPy &amp;amp; scikit-learn for model evaluation, and statsmodels for the ARIMA algorithm and Augmented Dickey-Fuller test.</description>
    </item>
    
    <item>
      <title>APS Predictor</title>
      <link>https://bellepmshen.github.io/portfolio/aps_truck/</link>
      <pubDate>Sat, 02 May 2020 19:47:09 +0200</pubDate>
      
      <guid>https://bellepmshen.github.io/portfolio/aps_truck/</guid>
      <description>coming soon
photo credit: https://www.defensivedriving.com/blog/share-the-road-how-to-drive-safely-around-big-trucks/</description>
    </item>
    
    <item>
      <title>Credit Default Risk Predictor</title>
      <link>https://bellepmshen.github.io/portfolio/loan-credit/</link>
      <pubDate>Thu, 02 May 2019 19:47:09 +0200</pubDate>
      
      <guid>https://bellepmshen.github.io/portfolio/loan-credit/</guid>
      <description>The purpose of this prediction model is to establish a unified method to assist in loan officers’ evaluation, incorporating a wide variety of data often overlooked. The prediction model will allow officers to process 2x to 3x the amount of applications with high degree of confidence, or free up their time to evaluate more complicated (potentially higher margin) cases while letting the model automatically approve the obvious prime applicants. The overall default exposure of the company can thus be controlled yet systematically and confidently managed to lower overtime.</description>
    </item>
    
  </channel>
</rss>
